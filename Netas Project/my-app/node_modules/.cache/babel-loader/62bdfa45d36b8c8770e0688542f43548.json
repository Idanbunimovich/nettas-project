{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\idanb\\\\Desktop\\\\Netas Project\\\\my-app\\\\src\\\\Pad.js\",\n    _s = $RefreshSig$();\n\nimport { Howl, Howler } from 'howler';\nimport { useEffect } from \"react/cjs/react.production.min\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Pad = props => {\n  _s();\n\n  let {\n    src\n  } = props;\n  const sound = new Howl({\n    src: [src]\n  });\n  const [songState, setSongState] = useState('play');\n\n  const changePadState = state => {\n    if (state === 'play') {\n      setSongState('stop');\n    } else {\n      setSongState('play');\n    }\n  };\n\n  useEffect(() => {\n    if (songState === 'play') {\n      soundPlay(sound);\n    } else {\n      soundStop(sound);\n    }\n  }, [songState]);\n\n  const soundPlay = sound => {\n    sound.play();\n  };\n\n  const soundStop = sound => {\n    sound.stop();\n  };\n\n  Howler.volume(1.0);\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: () => soundPlay(src)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Pad, \"keUN3G1fUWPiSuaVv96ZtLLCS6g=\");\n\n_c = Pad;\nexport default Pad;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pad\");","map":{"version":3,"sources":["C:/Users/idanb/Desktop/Netas Project/my-app/src/Pad.js"],"names":["Howl","Howler","useEffect","Pad","props","src","sound","songState","setSongState","useState","changePadState","state","soundPlay","soundStop","play","stop","volume"],"mappings":";;;AAAA,SAAQA,IAAR,EAAaC,MAAb,QAA0B,QAA1B;AACA,SAAQC,SAAR,QAAwB,gCAAxB;;;AAEA,MAAMC,GAAG,GAAIC,KAAD,IAAW;AAAA;;AACvB,MAAI;AAACC,IAAAA;AAAD,MAAQD,KAAZ;AACA,QAAME,KAAK,GAAG,IAAIN,IAAJ,CAAS;AAACK,IAAAA,GAAG,EAAG,CAACA,GAAD;AAAP,GAAT,CAAd;AACA,QAAM,CAACE,SAAD,EAAaC,YAAb,IAA6BC,QAAQ,CAAC,MAAD,CAA3C;;AACA,QAAMC,cAAc,GAAIC,KAAD,IAAW;AAC9B,QAAGA,KAAK,KAAK,MAAb,EAAoB;AAChBH,MAAAA,YAAY,CAAC,MAAD,CAAZ;AACH,KAFD,MAGI;AACAA,MAAAA,YAAY,CAAC,MAAD,CAAZ;AACH;AACJ,GAPD;;AAQAN,EAAAA,SAAS,CAAC,MAAI;AACN,QAAGK,SAAS,KAAK,MAAjB,EAAwB;AACpBK,MAAAA,SAAS,CAACN,KAAD,CAAT;AACH,KAFD,MAGI;AACAO,MAAAA,SAAS,CAACP,KAAD,CAAT;AACH;AACR,GAPQ,EAOP,CAACC,SAAD,CAPO,CAAT;;AASA,QAAMK,SAAS,GAAIN,KAAD,IAAU;AAExBA,IAAAA,KAAK,CAACQ,IAAN;AACH,GAHD;;AAKA,QAAMD,SAAS,GAAIP,KAAD,IAAW;AACzBA,IAAAA,KAAK,CAACS,IAAN;AACH,GAFD;;AAIAd,EAAAA,MAAM,CAACe,MAAP,CAAc,GAAd;AACA,sBAEI;AAAQ,IAAA,OAAO,EAAE,MAAKJ,SAAS,CAACP,GAAD;AAA/B;AAAA;AAAA;AAAA;AAAA,UAFJ;AAOC,CAtCD;;GAAMF,G;;KAAAA,G;AAwCN,eAAeA,GAAf","sourcesContent":["import {Howl,Howler} from 'howler'\r\nimport {useEffect} from \"react/cjs/react.production.min\";\r\n\r\nconst Pad = (props) => {\r\nlet {src} = props;\r\nconst sound = new Howl({src : [src]});\r\nconst [songState , setSongState] = useState('play');\r\nconst changePadState = (state) => {\r\n    if(state === 'play'){\r\n        setSongState('stop')\r\n    }\r\n    else{\r\n        setSongState('play');\r\n    }\r\n}\r\nuseEffect(()=>{\r\n        if(songState === 'play'){\r\n            soundPlay(sound);\r\n        }\r\n        else{\r\n            soundStop(sound);\r\n        }\r\n},[songState])\r\n\r\nconst soundPlay = (sound) =>{\r\n\r\n    sound.play();\r\n}\r\n\r\nconst soundStop = (sound) => {\r\n    sound.stop();\r\n}\r\n\r\nHowler.volume(1.0)\r\nreturn(\r\n\r\n    <button onClick={()=> soundPlay(src)}>\r\n\r\n    </button>\r\n)\r\n\r\n}\r\n\r\nexport default Pad;"]},"metadata":{},"sourceType":"module"}