{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\idanb\\\\Desktop\\\\Netas Project\\\\my-app\\\\src\\\\Pad.js\",\n    _s = $RefreshSig$();\n\nimport { Howl, Howler } from 'howler';\nimport { useEffect, useState } from 'react';\nimport { useRef } from \"react/cjs/react.production.min\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Pad = props => {\n  _s();\n\n  let {\n    src\n  } = props;\n  const sound = new Howl({\n    src: [src]\n  });\n  const [songState, setSongState] = useState('play');\n\n  const changePadState = (src, state) => {\n    if (songState === 'play') {\n      soundGeneral(src, songState);\n      setSongState('stop');\n    } else {\n      console.log('hi');\n      soundGeneral(src, songState);\n      setSongState('play');\n    }\n  };\n\n  const soundGeneral = (src, state) => {\n    if (state === 'play') {\n      sound.play();\n    } else {\n      sound.stop();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: () => changePadState(src, songState),\n    children: \"shalom\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Pad, \"iZfDUgtX6zvbsBE5lEFyEuFWckg=\");\n\n_c = Pad;\nexport default Pad;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pad\");","map":{"version":3,"sources":["C:/Users/idanb/Desktop/Netas Project/my-app/src/Pad.js"],"names":["Howl","Howler","useEffect","useState","useRef","Pad","props","src","sound","songState","setSongState","changePadState","state","soundGeneral","console","log","play","stop"],"mappings":";;;AAAA,SAAQA,IAAR,EAAaC,MAAb,QAA0B,QAA1B;AACA,SAAQC,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AACA,SAAQC,MAAR,QAAqB,gCAArB;;;AAEA,MAAMC,GAAG,GAAIC,KAAD,IAAW;AAAA;;AAEnB,MAAI;AAACC,IAAAA;AAAD,MAAQD,KAAZ;AACA,QAAME,KAAK,GAAG,IAAIR,IAAJ,CAAS;AACnBO,IAAAA,GAAG,EAAG,CAACA,GAAD;AADa,GAAT,CAAd;AAIA,QAAM,CAACE,SAAD,EAAaC,YAAb,IAA6BP,QAAQ,CAAC,MAAD,CAA3C;;AACA,QAAMQ,cAAc,GAAG,CAACJ,GAAD,EAAKK,KAAL,KAAe;AAE9B,QAAIH,SAAS,KAAK,MAAlB,EAA0B;AACtBI,MAAAA,YAAY,CAACN,GAAD,EAAME,SAAN,CAAZ;AACAC,MAAAA,YAAY,CAAC,MAAD,CAAZ;AACH,KAHD,MAGO;AACHI,MAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACAF,MAAAA,YAAY,CAACN,GAAD,EAAME,SAAN,CAAZ;AACAC,MAAAA,YAAY,CAAC,MAAD,CAAZ;AACH;AAER,GAXD;;AAYI,QAAMG,YAAY,GAAG,CAACN,GAAD,EAAKK,KAAL,KAAe;AAEhC,QAAGA,KAAK,KAAK,MAAb,EAAqB;AACjBJ,MAAAA,KAAK,CAACQ,IAAN;AACH,KAFD,MAGI;AACAR,MAAAA,KAAK,CAACS,IAAN;AACH;AACJ,GARD;;AAaJ,sBAEI;AAAQ,IAAA,OAAO,EAAE,MAAKN,cAAc,CAACJ,GAAD,EAAKE,SAAL,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AASC,CA1CL;;GAAMJ,G;;KAAAA,G;AA4CF,eAAeA,GAAf","sourcesContent":["import {Howl,Howler} from 'howler'\r\nimport {useEffect, useState} from 'react'\r\nimport {useRef} from \"react/cjs/react.production.min\";\r\n\r\nconst Pad = (props) => {\r\n\r\n    let {src} = props;\r\n    const sound = new Howl({\r\n        src : [src]\r\n    });\r\n\r\n    const [songState , setSongState] = useState('play');\r\n    const changePadState = (src,state) => {\r\n\r\n            if (songState === 'play') {\r\n                soundGeneral(src, songState);\r\n                setSongState('stop')\r\n            } else {\r\n                console.log('hi')\r\n                soundGeneral(src, songState);\r\n                setSongState('play');\r\n            }\r\n        \r\n    }\r\n        const soundGeneral = (src,state) => {\r\n\r\n            if(state === 'play') {\r\n                sound.play();\r\n            }\r\n            else{\r\n                sound.stop()\r\n            }\r\n        }\r\n\r\n\r\n\r\n\r\n    return(\r\n\r\n        <button onClick={()=> changePadState(src,songState)}>\r\n            shalom\r\n\r\n\r\n        </button>\r\n    )\r\n\r\n    }\r\n\r\n    export default Pad;"]},"metadata":{},"sourceType":"module"}