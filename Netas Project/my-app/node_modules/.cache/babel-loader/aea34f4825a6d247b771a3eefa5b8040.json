{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\idanb\\\\Desktop\\\\Netas Project\\\\my-app\\\\src\\\\Pad.js\",\n    _s = $RefreshSig$();\n\nimport { Howl, Howler } from 'howler';\nimport { useEffect, useState } from 'react';\nimport { useRef } from \"react/cjs/react.production.min\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Pad = props => {\n  _s();\n\n  let {\n    sound,\n    songPlay,\n    index\n  } = props;\n  const [songState, setSongState] = useState('play');\n\n  const changePadState = state => {\n    if (state === 'play') {\n      if (songPlay.length === 0) {\n        songPlay.push(sound);\n        sound.play();\n      } else {\n        songPlay.push(sound);\n      }\n\n      setSongState('stop');\n    } else {\n      console.log('stop');\n      sound.stop();\n      setSongState('play');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: () => changePadState(songState),\n    children: \"shalom\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Pad, \"iZfDUgtX6zvbsBE5lEFyEuFWckg=\");\n\n_c = Pad;\nexport default Pad;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pad\");","map":{"version":3,"sources":["C:/Users/idanb/Desktop/Netas Project/my-app/src/Pad.js"],"names":["Howl","Howler","useEffect","useState","useRef","Pad","props","sound","songPlay","index","songState","setSongState","changePadState","state","length","push","play","console","log","stop"],"mappings":";;;AAAA,SAAQA,IAAR,EAAaC,MAAb,QAA0B,QAA1B;AACA,SAAQC,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AACA,SAAQC,MAAR,QAAqB,gCAArB;;;AAEA,MAAMC,GAAG,GAAIC,KAAD,IAAW;AAAA;;AAEnB,MAAI;AAACC,IAAAA,KAAD;AAAOC,IAAAA,QAAP;AAAgBC,IAAAA;AAAhB,MAAyBH,KAA7B;AAGA,QAAM,CAACI,SAAD,EAAaC,YAAb,IAA6BR,QAAQ,CAAC,MAAD,CAA3C;;AACA,QAAMS,cAAc,GAAIC,KAAD,IAAW;AAE1B,QAAIA,KAAK,KAAK,MAAd,EAAsB;AAClB,UAAGL,QAAQ,CAACM,MAAT,KAAoB,CAAvB,EAA0B;AACtBN,QAAAA,QAAQ,CAACO,IAAT,CAAcR,KAAd;AACAA,QAAAA,KAAK,CAACS,IAAN;AACH,OAHD,MAII;AACAR,QAAAA,QAAQ,CAACO,IAAT,CAAcR,KAAd;AAEH;;AACDI,MAAAA,YAAY,CAAC,MAAD,CAAZ;AACH,KAVD,MAUO;AACHM,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAX,MAAAA,KAAK,CAACY,IAAN;AACAR,MAAAA,YAAY,CAAC,MAAD,CAAZ;AACH;AAER,GAlBD;;AAwBA,sBAEI;AAAQ,IAAA,OAAO,EAAE,MAAKC,cAAc,CAACF,SAAD,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AASC,CAvCL;;GAAML,G;;KAAAA,G;AAyCF,eAAeA,GAAf","sourcesContent":["import {Howl,Howler} from 'howler'\r\nimport {useEffect, useState} from 'react'\r\nimport {useRef} from \"react/cjs/react.production.min\";\r\n\r\nconst Pad = (props) => {\r\n\r\n    let {sound,songPlay,index} = props;\r\n\r\n\r\n    const [songState , setSongState] = useState('play');\r\n    const changePadState = (state) => {\r\n\r\n            if (state === 'play') {\r\n                if(songPlay.length === 0) {\r\n                    songPlay.push(sound);\r\n                    sound.play();\r\n                }\r\n                else{\r\n                    songPlay.push(sound);\r\n                    \r\n                }\r\n                setSongState('stop')\r\n            } else {\r\n                console.log('stop')\r\n                sound.stop()\r\n                setSongState('play');\r\n            }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    return(\r\n\r\n        <button onClick={()=> changePadState(songState)}>\r\n            shalom\r\n\r\n\r\n        </button>\r\n    )\r\n\r\n    }\r\n\r\n    export default Pad;"]},"metadata":{},"sourceType":"module"}