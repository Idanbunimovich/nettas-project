[{"C:\\Users\\idanb\\Desktop\\nettas-project\\Netas Project\\my-app\\src\\index.js":"1","C:\\Users\\idanb\\Desktop\\nettas-project\\Netas Project\\my-app\\src\\reportWebVitals.js":"2","C:\\Users\\idanb\\Desktop\\nettas-project\\Netas Project\\my-app\\src\\App.js":"3","C:\\Users\\idanb\\Desktop\\nettas-project\\Netas Project\\my-app\\src\\Pad.js":"4"},{"size":500,"mtime":499162500000,"results":"5","hashOfConfig":"6"},{"size":362,"mtime":499162500000,"results":"7","hashOfConfig":"6"},{"size":2147,"mtime":1614170516061,"results":"8","hashOfConfig":"6"},{"size":2146,"mtime":1614170516081,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1gg0p2",{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"14","messages":"15","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},"C:\\Users\\idanb\\Desktop\\nettas-project\\Netas Project\\my-app\\src\\index.js",[],"C:\\Users\\idanb\\Desktop\\nettas-project\\Netas Project\\my-app\\src\\reportWebVitals.js",[],"C:\\Users\\idanb\\Desktop\\nettas-project\\Netas Project\\my-app\\src\\App.js",["20","21"],"import logo from './logo.svg';\nimport './App.css';\nimport {Howl,Howler} from 'howler'\nimport firstSong from './MusicFiles/120_future_funk_beats_25.mp3'\nimport secondsong from './MusicFiles/PAS3GROOVE1.03B.mp3'\nimport thirdSong from './MusicFiles/120_stutter_breakbeats_16.mp3'\nimport fourthSong from './MusicFiles/Bass Warwick heavy funk groove on E 120 BPM.mp3'\nimport fifthSong from './MusicFiles/electric guitar coutry slide 120bpm - B.mp3'\nimport sixthSong from './MusicFiles/FUD_120_StompySlosh.mp3'\nimport seventhSong from './MusicFiles/GrooveB_120bpm_Tanggu.mp3'\nimport eigthSong from './MusicFiles/MazePolitics_120_Perc.mp3'\nimport ninthSong from './MusicFiles/SilentStar_120_Em_OrganSynth.mp3'\nimport Pad from \"./Pad\";\nimport {useState} from \"react\";\n\nlet songPlay = [];\nlet songArray = [firstSong,secondsong,thirdSong,fourthSong,fifthSong,sixthSong,seventhSong,eigthSong,ninthSong]\nlet playArray = songArray.map(item=>{\n    return false\n})\nlet soundArray = songArray.map((item,index) => {\n\n    let sound = new Howl({\n        src: [item],\n        loop:true,\n        onend: () => {\n            if(songPlay.length === 1){\n\n            }\n            else{\n                songPlay.shift();\n                songPlay[0].sound.play();\n                playArray[songPlay[0].index] = true;\n\n\n            }\n        }\n\n    });\n\n\n    return sound;\n\n})\nconsole.log(soundArray)\n\nfunction App() {\n    const [songPause,setSongPause] = useState(false);\n    return (\n    <div className=\"App\">\n      <h1>Neta's awesome music</h1>\n        {songArray.map((item,index)=>{\n\n\n            return(<Pad index={index} playArray={playArray} songPlay={songPlay} sound={soundArray[index]} songPause ={songPause}/>)\n        })}\n\n        <button style={{display:'block' ,padding:'1rem',marginLeft:'auto',marginRight:'auto',marginTop:'3rem'}}\n                onClick={() => setSongPause(true)}>\n            pause\n        </button>\n        <button style={{display:'block' ,padding:'1rem',marginLeft:'auto',marginRight:'auto',marginTop:'3rem'}}\n                onClick={() => setSongPause(false)}>\n            play\n        </button>\n\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\idanb\\Desktop\\nettas-project\\Netas Project\\my-app\\src\\Pad.js",["22","23"],"\r\nimport {useEffect, useState,useRef} from 'react'\r\n\r\n\r\nconst Pad = (props) => {\r\n\r\n    let {sound,songPlay,songPause,playArray,index} = props;\r\n\r\n\r\n\r\n    const [songState , setSongState] = useState('play');\r\n    const [songPause2,setSongPause] = useState(false);\r\n\r\n    //variable to check if component mounted to the DOM\r\n    const isMount = useRef(false);\r\n\r\n\r\n\r\n    useEffect(()=>{\r\n\r\n        if(isMount.current === true) {\r\n            if (songPause === true && playArray[index] === true) {\r\n\r\n                sound.pause();\r\n\r\n\r\n            } else {\r\n                if(playArray[index] === true) {\r\n                    sound.play();\r\n                }\r\n            }\r\n        }\r\n        else{\r\n            isMount.current = true;\r\n        }\r\n    },[songPause])\r\n\r\n    const changePadState = (state) => {\r\n\r\n\r\n            if (state === 'play') {\r\n                let obj = {};\r\n                obj.index = index;\r\n                obj.sound = sound;\r\n\r\n\r\n                if(songPlay.length === 0) {\r\n\r\n                    songPlay.push(obj);\r\n                    sound.play();\r\n                    playArray[index] = true;\r\n\r\n\r\n                }\r\n                else{\r\n\r\n                    songPlay.push(obj);\r\n\r\n                }\r\n                setSongState('stop')\r\n            } else {\r\n\r\n                sound.stop();\r\n                setSongPause(false);\r\n                playArray[index] = false;\r\n\r\n                //looking for the item in the queue to remove him\r\n                for(let i = 0; i < songPlay.length; i++){\r\n                    if(songPlay[i].index === index){\r\n                        if(i !== songPlay.length - 1){\r\n                            songPlay[i+1].sound.play();\r\n                        }\r\n                        songPlay = songPlay.splice(i,1);\r\n\r\n\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                setSongState('play');\r\n            }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return(\r\n\r\n        <button style={{margin:'3rem',padding:'1rem'}} onClick={() => changePadState(songState)}>\r\n            shalom\r\n\r\n\r\n        </button>\r\n    )\r\n\r\n    }\r\n\r\n    export default Pad;",{"ruleId":"24","severity":1,"message":"25","line":1,"column":8,"nodeType":"26","messageId":"27","endLine":1,"endColumn":12},{"ruleId":"24","severity":1,"message":"28","line":3,"column":14,"nodeType":"26","messageId":"27","endLine":3,"endColumn":20},{"ruleId":"24","severity":1,"message":"29","line":12,"column":12,"nodeType":"26","messageId":"27","endLine":12,"endColumn":22},{"ruleId":"30","severity":1,"message":"31","line":36,"column":7,"nodeType":"32","endLine":36,"endColumn":18,"suggestions":"33"},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Howler' is defined but never used.","'songPause2' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'index', 'playArray', and 'sound'. Either include them or remove the dependency array.","ArrayExpression",["34"],{"desc":"35","fix":"36"},"Update the dependencies array to be: [index, playArray, songPause, sound]",{"range":"37","text":"38"},[755,766],"[index, playArray, songPause, sound]"]